{"version":3,"sources":["rootCA.crt","configItem.js","App.js","index.js"],"names":["module","exports","confirm","Modal","Meta","Card","itemAction","delete","select","edit","ConfigItem","restartConfirm","title","content","okText","okType","cancelText","onOk","selectConfigConfirm","onCancel","console","log","selectCurItem","props","proxyIsRunning","selectConfig","data","editCurItem","editConfig","doAction","action","this","spinning","runing","tip","onClick","turnOffProxyServer","count","itemIndex","style","backgroundColor","fileData","description","actions","className","type","key","fileName","Component","crt","require","Panel","Collapse","App","state","configs","startUpSuc","runningConfigName","connectError","pacAddress","params","SELECT_CONFIG","payload","ws","send","JSON","stringify","EDIT_CONFIG","showMsg","status","info","message","processStartUp","startSuc","msg","setState","GET_PAC_ADDRESS","setCurrentConfig","setPacAddress","setSelectedItemData","curItemConfig","versionCompare","latestVersion","localVersion","text","showUpdateTip","checkUpdate","CHECK_UPDATE","notification","duration","alert","WebSocket","addEventListener","evt","FETCH_ALL_CONFIGS","GET_CURRENT_CONFIG","result","parse","e","warn","START_CALLBACK","setTimeout","window","location","reload","showIcon","map","v","index","length","href","target","download","accordion","header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4caa820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rootCA.45130045.crt\";","import './item.css';\n\nimport React,{Component} from 'react';\nimport {Card, Icon, Avatar, Spin, Modal, Badge} from 'antd';\nconst { confirm } = Modal;\n\nconst { Meta } = Card;\n\nconst itemAction = {\n  delete: 'delete',\n  select: 'select',\n  edit: 'edit'\n}\nexport default  class ConfigItem extends Component{\n  restartConfirm = () => {\n    confirm({\n      title: '切换配置',\n      content: '代理服务器运行中，需要换到当前配置吗？',\n      okText: '好的',\n      okType: 'danger',\n      cancelText: '取消切换',\n      onOk: () => {\n        this.selectConfigConfirm()\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    });\n  }\n  \n  selectCurItem = () => {\n    if (this.props.proxyIsRunning) {\n      this.restartConfirm()\n    } else {\n      this.selectConfigConfirm()\n    }\n  }\n  selectConfigConfirm = () => {\n    this.props.selectConfig(this.props.data)\n  \n  }\n  editCurItem = () => {\n    this.props.editConfig(this.props.data);\n  }\n  doAction = (action) => {\n    switch (action) {\n      case itemAction.select:\n        this.selectCurItem();\n        break;\n      case itemAction.edit:\n        this.editCurItem();\n        break;\n      default:\n        console.log('没有相应的action', action)\n    }\n  }\n  render(){\n    const {data} = this.props;\n    return (\n      <Spin spinning={this.props.runing} tip={<div onClick={this.turnOffProxyServer}>代理中... </div>}>\n        <div>\n          <Card\n            title={<div>\n              <Badge count={this.props.itemIndex + 1} style={{ backgroundColor: '#52c41a' }} />\n              {data.fileData.description}</div>}\n            actions={[\n              <div className=\"icon-container\" onClick={() => {this.doAction(itemAction.select)}}>\n                <Icon type=\"heart\" key=\"heart\"/>\n                <span>选择</span>\n              </div>,\n              <div className=\"icon-container\" onClick={() => {this.doAction(itemAction.edit)}}>\n                <Icon type=\"edit\" key=\"edit\"/>\n                <span>修改</span>\n              </div>,\n              <div className=\"icon-container\">\n                <Icon type=\"delete\" key=\"delete\"/>\n                <span>删除</span>\n              </div>,\n            ]}\n          >\n            <Meta\n              description={<div>\n                {data.fileData.description ? data.fileData.description : `${data.fileName}无描述`}</div>}\n            />\n          </Card>\n        </div>\n      </Spin>\n      \n    )\n  }\n}\n","\nimport React, {Component} from 'react';\nimport './App.css';\nimport { message,Alert,notification ,Divider,Collapse} from 'antd';\nimport ConfigItem from './configItem';\nconst crt = require(\"./rootCA.crt\");\nconst { Panel } = Collapse;\n\n\n\nconst actions = {\n  'FETCH_ALL_CONFIGS': 'getAllConfig',\n  'SELECT_CONFIG': 'select_config',\n  'EDIT_CONFIG': 'edit_config',\n  'START_CALLBACK':'start_callback',\n  'GET_CURRENT_CONFIG': 'get_current_config',\n  'CHECK_UPDATE': 'CHECK_UPDATE',\n  'GET_PAC_ADDRESS': 'GET_PAC_ADDRESS'\n}\n\n\nclass App extends Component {\n  state = {\n    configs: [],\n    startUpSuc: false,\n    runningConfigName: '',\n    connectError: false,\n    pacAddress: ''\n  }\n  selectConfig = (data) => {\n    const params = {\n      action: actions.SELECT_CONFIG,\n      payload: data\n    }\n    this.ws.send(JSON.stringify(params))\n  }\n  editConfig = (data) => {\n    const params = {\n      action: actions.EDIT_CONFIG,\n      payload: data\n    }\n    this.ws.send(JSON.stringify(params))\n  }\n  showMsg = (status, info) => {\n    message[status](info)\n  }\n\n  processStartUp = (payload) => {\n    this.showMsg(payload.startSuc ? 'success' : 'error', payload.msg);\n    this.setState({startUpSuc: payload.startSuc}, () => {\n      // !this.state.startUpSuc && this.restartConfirm()\n      if (this.state.startUpSuc) {\n        this.setState({runningConfigName: payload.fileName});\n        this.ws.send(JSON.stringify({action: actions.GET_PAC_ADDRESS}));\n      }\n    })\n  }\n  setCurrentConfig = (payload) => {\n    const {fileName} = payload;\n    this.setState({runningConfigName: fileName});\n    if (!!fileName) {\n      this.ws.send(JSON.stringify({action: actions.GET_PAC_ADDRESS}));\n    }\n  }\n  setPacAddress = (pacAddress) => {\n    this.setState({pacAddress})\n  }\n  setSelectedItemData = (data) => {\n    this.setState({curItemConfig: data})\n  }\n  versionCompare = ({latestVersion,localVersion}) => {\n    if (latestVersion !== localVersion) {\n      const text = `检测到新版本${latestVersion},当前版本为${localVersion},请升级获得更多代理规则支持 + 错误修复`\n      this.showUpdateTip(text)\n    }\n  }\n  componentDidMount() {\n    //发送请求获取配置信息\n    let ws = new WebSocket(\"ws://localhost:9876\");\n    this.ws = ws;\n    \n    ws.addEventListener(\"open\",(evt) => {\n      console.log(\"Connection open ...\");\n      // ws.send(\"Hello WebSockets!\");\n      this.setState({connectError: false});\n      ws.send(JSON.stringify({action: actions.FETCH_ALL_CONFIGS}));\n      ws.send(JSON.stringify({action: actions.GET_CURRENT_CONFIG}));\n      this.checkUpdate();\n    })\n  \n  \n    ws.addEventListener(\"message\",(evt) => {\n      console.log( \"Received Message: \" , evt.data);\n      // ws.close();\n      let result ;\n      try {\n        result = JSON.parse(evt.data);\n      } catch (e) {\n        console.warn('传递数据无法json化，格式错误');\n        return\n      }\n      if (result.action === actions.FETCH_ALL_CONFIGS) {\n        this.setState({configs: result.payload});\n      }\n      if (result.action === actions.START_CALLBACK) {\n        const {payload} = result;\n        this.processStartUp(payload)\n      }\n      if (result.action === actions.GET_CURRENT_CONFIG) {\n        const {payload} = result;\n        payload && this.setCurrentConfig(payload)\n      }\n      if (result.action === actions.GET_PAC_ADDRESS) {\n        const {payload} = result;\n        payload && this.setPacAddress(payload)\n      }\n      if (result.action === actions.EDIT_CONFIG) {\n        const {payload} = result;\n        payload && this.setSelectedItemData(payload)\n      }\n      if (result.action === actions.CHECK_UPDATE) {\n        const {payload} = result;\n        payload && this.versionCompare(payload)\n      }\n    })\n  \n    ws.addEventListener('close', (evt) => {\n      console.log(\"Connection closed.\");\n      this.setState({connectError: true});\n      setTimeout(() => {\n        window.location.reload()\n      }, 10000)\n    });\n  }\n  checkUpdate = (data) => {\n    const params = {\n      action: actions.CHECK_UPDATE,\n      payload: data\n    }\n    this.ws.send(JSON.stringify(params))\n  }\n  showUpdateTip = (text) => {\n    notification['info']({\n      message: 'b-proxy-cli 检测到新版本',\n      duration:null,\n      description:text\n    });\n  \n  }\n  turnOffProxyServer = () => {\n    alert(11)\n  }\n  render(){\n  \n    return (\n      <div className=\"App\">\n        \n        {this.state.connectError && (\n          <Alert\n            message=\"与代理服务器的通信失败\"\n            description=\"代理服务器可能没有启动,10s后网页会刷新重试...\"\n            type=\"error\"\n            showIcon\n          />\n        )}\n          <div className={'config-container'}>\n            {this.state.configs.map((v,index) => {\n              return (\n                <ConfigItem\n                  selectConfig={this.selectConfig}\n                  editConfig={this.editConfig}\n                  data = {v}\n                  proxyIsRunning={this.state.runningConfigName.length !== 0}\n                  runing={this.state.runningConfigName=== v.fileName}\n                  key={index}\n                  itemIndex={index}\n                />\n              )\n            })}\n          </div>\n        <Divider/>\n  \n        <div className={'footer'}>\n          <a href={crt} target={\"_blank\"} download>点击下载根证书</a>\n          {!this.state.connectError && (\n            <div>\n              自动代理配置url：{this.state.pacAddress}\n            </div>\n          )}\n          <Divider/>\n          <Collapse accordion>\n            <Panel header=\"如何备份我的配置\" key=\"1\">\n              <p>组件升级的时候，会覆盖安装组件，覆盖配置文件，为了保存你的配置文件，请拷贝配置文件到其他地方，当更新后，拷贝回来即可</p>\n            </Panel>\n          </Collapse>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}